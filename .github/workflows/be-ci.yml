name: Backend Continuous Integration

on:
  # Is able to be run on-demand (i.e. manually without needing to push code)
  workflow_dispatch:
  # Runs on pull_requests against the main branch,only when code in the frontend application changes
  pull_request:
    branches:
      - main

jobs:
  # Runs a linting job that fails if the code doesn't adhere to eslint rules
  linting-job:
    runs-on: ubuntu-latest
    environment: Devlopmnet Environment

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Dependencies
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Checkout Run Lint
      run: cd starter/backend && pipenv run lint

  # Runs a test job that fails if the test suite doesn't pass
  test-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Python 3
      uses:  actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Dependencies
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Test
      run: cd starter/backend && pipenv install pytest && pipenv run test

      
  Build:
    needs: [linting-job, test-job]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Build Docker Image
      run: |
        cd starter/backend
        docker build --tag mp-backend:latest .

