name: Frontend Continuous Integration

on:
  # Is able to be run on-demand (i.e. manually without needing to push code)
  workflow_dispatch:
  # Runs on pull_requests against the main branch,only when code in the frontend application changes
  pull_request:
    branches:
      - main

jobs:
  # Runs a linting job that fails if the code doesn't adhere to eslint rules
  linting-job:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Check the Repository
      uses: actions/checkout@v3

    # Setup NodeJS
    # Perform a cache action to restore cache before dependency install
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        # Perform a cache action to restore cache before dependency install
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    # Install dependencies
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    # Run the npm run lint command  
    - name: Checkout Run Lint
      working-directory: starter/frontend
      run:
        npm run lint

  # Runs a test job that fails if the test suite doesn't pass
  test-job:
    runs-on: ubuntu-latest

    # Checkout code
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    # Setup NodeJS
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        # Perform a cache action to restore cache before dependency install
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    # Install dependencies
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    # Run the npm run test command
    - name: Test
      working-directory: starter/frontend
      run:
        npm test

  # Runs a build job only if the lint and test jobs pass and successfully builds the application
  build-job:
    # This job should only run after the first 2 succeed
    needs: [linting-job, test-job]
    runs-on: ubuntu-latest
    
    steps:
    # Checkout code
    - name: Check the Repository
      uses: actions/checkout@v3
    
    # Setup NodeJS
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        # Perform a cache action to restore cache before dependency install
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    # Build and run docker Image
    - name: Build and run docker Image
      working-directory: starter/frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=frontend-app:latest .
        docker run --name frontend-app -p 3000:3000 -d frontend-app