name: Backend Continuous Deployment

on:
  # Is able to be run on-demand (i.e. manually without needing to push code)
  workflow_dispatch:
  # Runs on push against the main branch.
  push:
    branches:
      - main
    # Only when code in the frontend application changes  
    paths:
      - starter/backend/**

jobs:
  linting-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      working-directory: starter/backend 
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Checkout Run Lint
      working-directory: starter/backend
      run: pipenv run lint

  test-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Python 3
      uses:  actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Dependencies
      working-directory: starter/backend
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Run Test
      working-directory: starter/backend
      run: |
        pipenv install pytest
        pipenv run test

      
  build-job:
    needs: [linting-job, test-job]
    runs-on: ubuntu-latest
    environment:
      name: DEV

    env:
      REPO_NAME: backend
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
        
    - name: Login to Amazon
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker Image
      working-directory: starter/backend
      run: |
        docker build --tag 099570324592.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:${GITHUB_SHA::7} .
        docker push 099570324592.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:${GITHUB_SHA::7}

    - name: Update Kubeconfig
      run: aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Deploy Docker Image to Amazon EKS
      working-directory: starter/backend/k8s
      run: |
        kustomize edit set image backend=099570324592.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:${GITHUB_SHA::7}
        kustomize build | kubectl apply -f -